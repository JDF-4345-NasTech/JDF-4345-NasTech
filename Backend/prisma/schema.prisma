// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id Int @id @default(autoincrement())
  name String
  description String
  events Event[]
  admins User[]
  subscribers Subscriptions[]
  requests User[] @relation("OrganizationRequests")
}

model Subscriptions {
  userId String @map("user_id")
  organizationId Int @map("organization_id")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  @@id([userId, organizationId])
}

model Event {
  id Int @id @default(autoincrement())
  name String
  date String
  location String
  description String
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  rsvpResponses RSVPResponse[]
  donations     Donation[]
}

model RSVPResponse {
  id Int @id @default(autoincrement())
  email String
  name String?
  response String
  eventId Int
  event Event @relation(fields: [eventId], references: [id])
  timestamp DateTime @default(now())

  @@unique([email, eventId])
}

model User {
  id             String        @id   // Use email as the primary key
  firstName      String?
  lastName       String?
  isOrgAdmin     Boolean       @default(false)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  subscribed_organizations Subscriptions[]
  requestedOrganizations     Organization[] @relation("OrganizationRequests")
}

model Description {
  id          Int      @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
}

model Donation {
  id        Int     @id @default(autoincrement())
  amount    Float
  donorName String?
  event     Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId   Int
  createdAt DateTime @default(now())
}